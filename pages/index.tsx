import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import styles from '../styles/index.module.css';

const Home: NextPage = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');

  const [isLoading, setIsLoading] = useState(false);
  const [res, setResponse] = useState<{ error: string | null } | null>(null);

  const onSubmit = async () => {
    setIsLoading(true);
    const res = await axios.post('/api/contact-form', {
      name,
      email,
      message,
    });
    setResponse(res.data);
    setIsLoading(false);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Custom Timeline Entries NextJS Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2>Contact Form</h2>
        <p>This is an example contact form to show how Custom Timeline Entries can be used</p>
        {!res || res.error ? (
          <form
            onSubmit={(e) => {
              e.preventDefault();
              onSubmit();
            }}
          >
            <div className={styles.formfield}>
              <label className={styles.label}>Name</label>
              <input
                placeholder="e.g. Grace Hopper"
                className={styles.input}
                value={name}
                onChange={(e) => setName(e.currentTarget.value)}
                required
              />
            </div>
            <div className={styles.formfield}>
              <label className={styles.label}>Email</label>
              <input
                type={email}
                placeholder="e.g. grace.hopper@nasa.com"
                className={styles.input}
                value={email}
                onChange={(e) => setEmail(e.currentTarget.value)}
                required
              />
            </div>
            <div className={styles.formfield}>
              <label className={styles.label}>Message</label>
              <textarea
                className={styles.textarea}
                value={message}
                onChange={(e) => setMessage(e.currentTarget.value)}
                required
              />
            </div>

            <button disabled={isLoading} className={styles.button} type="submit">
              {isLoading ? 'Loading' : 'Submit'}
            </button>
          </form>
        ) : (
          <p>Contact form submitted succesfully! Go to Plain to check it out.</p>
        )}
      </main>
    </div>
  );
};

export default Home;
