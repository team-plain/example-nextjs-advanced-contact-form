import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

function Spinner() {
  return (
    <div className={styles.spinner}>
      <div></div>
      <div></div>
      <div></div>
      <div></div>
    </div>
  );
}

const Home: NextPage = () => {
  const [message, setMessage] = useState("");
  const [importance, setImportance] = useState("");
  const [error, setError] = useState<string | null>(null);
  const [customer, setCustomer] = useState<{} | null>(null);

  const fetchCustomer = async () => {
    const response = await axios.post("/api/create-customer");

    if (response.data.error) {
      setError(response.data.error);
      return;
    }

    setCustomer(response.data);
  };

  useEffect(() => {
    if (customer) {
      return;
    }

    fetchCustomer();
  }, [customer]);

  const onSubmit = async () => {
    await axios.post("/api/create-custom-timeline-entry", {
      customer,
      message,
      importance,
    });

    setMessage("");
    setImportance("");
  };

  if (error) {
    return <div className={styles.error_box}>{error}</div>;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Custom Timeline Entries NextJS Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* TODO: Maybe not have loading state? */}
      {!customer ? (
        <Spinner />
      ) : (
        <>
          <h1 className={styles.title}>
            Custom Timeline Entries NextJS Example
          </h1>
          <main className={styles.main}>
            <h2>Feature Request Form</h2>
            <form
              onSubmit={(e) => {
                e.preventDefault();
                onSubmit();
              }}
            >
              <div className={styles.formfield}>
                <label className={styles.label}>Message</label>
                <textarea
                  className={styles.textarea}
                  value={message}
                  onChange={(e) => setMessage(e.currentTarget.value)}
                />
              </div>
              <div className={styles.formfield}>
                <label className={styles.label}>
                  How critical/important is this to you?
                </label>
                <input
                  className={styles.input}
                  value={importance}
                  onChange={(e) => setImportance(e.currentTarget.value)}
                />
              </div>
              <button className={styles.button}>Submit</button>
            </form>
          </main>
        </>
      )}
    </div>
  );
};

export default Home;
